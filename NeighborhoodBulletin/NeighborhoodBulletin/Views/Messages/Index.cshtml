@model NeighborhoodBulletin.Models.MessageIndexViewModel

@{
    ViewData["Title"] = $"{@Model.Neighbor.ZipCode}";
}

<!DOCTYPE html>
<html>
<head>
    <title>Simple Map</title>
    <meta name="viewport" content="initial-scale=1.0">
    <meta charset="utf-8">
    <style>
        /* Always set the map height explicitly to define the size of the div
        * element that contains the map. */
        #map {
            height: 100%;
        }
        /* Optional: Makes the sample page fill the window. */
        html, body {
            height: 100%;
            margin: 0;
            padding: 0;
        }
    </style>
</head>
<body>
    <div id="map" style="height:400px; width:100%;"></div>





    <h2 id="header">Local Discussion</h2>

    <p>

        <a asp-action="Create">Create New</a>

    </p>

    <table class="table">
        <thead>
            <tr>
                @*
                    <th>
                        @Html.DisplayNameFor(model => model.Neighbor)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Message.Username)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Message.Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Message.DateTime)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Messages)
            {
                <tr>
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.Neighbor.Id)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    @if (item.NeighborId == Model.Neighbor.Id)
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>

                    }
                </tr>
            }
        </tbody>
    </table>

    <h2 id="header">NonLocal Discussion</h2>

    <p>

        <a asp-action="Create">Create New</a>

    </p>

    <table class="table">
        <thead>
            <tr>
                @*
                    <th>
                        @Html.DisplayNameFor(model => model.Neighbor)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Message.Username)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Message.Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Message.ZipCode)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Message.DateTime)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.MessagesOutsideZipCode)
            {
                <tr>
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.Neighbor.Id)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.Username)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    @if (item.NeighborId == Model.Neighbor.Id)
                    {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>

                    }
                </tr>
            }
        </tbody>
    </table>


    <h2 id="header">Local Businesses (your Subscriptions)</h2>

    <table class="table">
        <thead>
            <tr>
                @*
                    <th>
                        @Html.DisplayNameFor(model => model.Neighbor)
                    </th>*@
                <th>
                    @Html.DisplayNameFor(model => model.Update.BusinessName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Update.Text)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Update.DateTime)
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Updates)
            {
                <tr>
                    @*
                        <td>
                            @Html.DisplayFor(modelItem => item.Neighbor.Id)
                        </td>*@
                    <td>
                        @Html.DisplayFor(modelItem => item.BusinessName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    @*@if (item.ShopOwnerId == Model.Neighbor.Id)
                        {
                        <td>
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                        }*@

                </tr>
            }
        </tbody>
    </table>


    <script type="text/javascript">
        let map;

        // Standard google maps function
        function initMap() {
            var myLatlng = new google.maps.LatLng(@Model.Neighbor.Latitude, @Model.Neighbor.Longitude);
            var myOptions = {
                zoom: 12,
                center: myLatlng,
            }
            map = new google.maps.Map(document.getElementById('map'), myOptions);
            ShopOwnerMarkers();
        }

        // Function for adding a marker to the page.
        function addMarker(location) {
            marker = new google.maps.Marker({
                position: location,
                map: map
            });
        }

        function ShopOwnerMarkers()
        {
                @foreach (var item in Model.ShopOwners)
                {
                    <text>
                    var shopOwnerLocation = new google.maps.LatLng(@item.Latitude, @item.Longitude);
                    addMarker(shopOwnerLocation);
                    </text>
                }
        }

                //shopOwners.forEach(element =>
                //{
                //    var latitude = element.Latitude;
                //    var longitude = element.Longitude;
                //    shopOwnerlocation = new google.maps.LatLng(latitude, longitude);
                //    addMarker(shopOwnerLocation);
                //});
        @*function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
                center: { lat: @Model.Neighbor.Latitude, lng: @Model.Neighbor.Longitude },
                zoom: 12
            });
        };*@
        //function addMarker(location, map)
        //{

        //}
        //var latLng = new google.maps.LatLng(s.lat, s.lng);
        //var mapOptions =
        //var marker = new google.maps.Marker({
        //    position: latLng,
        //    map: map,
        //    title: 'Subscriptions in your Zip Code'
        //marker.SetMap(map);



        //}

    </script>





    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDDkLcqZqMPi_tWPvqGyBKBCBfuOKC8gvw&callback=initMap" async defer></script>
</body>
</html>

