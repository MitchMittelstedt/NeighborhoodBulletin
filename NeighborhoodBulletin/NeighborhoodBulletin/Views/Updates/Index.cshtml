@model NeighborhoodBulletin.Models.UpdateIndexViewModel

@{
    ViewData["Title"] = "Index";
}

<!DOCTYPE html>
<html>
<head>
    <script src="https://cdn.jsdelivr.net/npm/chart.js@2.8.0/dist/Chart.min.js"></script>
</head>
<body>
    <br />
    <br />
    <br />
    <br />
    <br />
    <br />
    <canvas id="chart" width="100" height="50"></canvas>



    <script type="text/javascript">

        const xlabels = [];
        const zipCodeFrequencies = [];
        async function chartIt() {
            await zipCodesAndFrequencies();
            const ctx = document.getElementById('chart').getContext('2d');

            const myChart = new Chart(ctx, {
                type: 'horizontalBar',
                data: {
                    labels: zipCodes,
                    datasets: [{
                        label: 'Number Of Subscriptions Per Zip Code',
                        data: frequencies,
                        backgroundColor:
                            'rgba(0, 128, 0 , .6)'
                        ,
                        borderColor:
                            'rgba(0, 128, 0 , 1)'
                        ,
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                         xAxes: [{
                            ticks: {
                                scaleBeginAtZero: true,
                                beginAtZero: true
                            }
                         }]
                    }
                }
            });
        }

        const zipCodes = [];
        const frequencies = [];


        async function zipCodesAndFrequencies()
        {
            @foreach (var z in Model.ZipCodes)
            {
                <text>
                var zipcode = @z;
                zipCodes.push(zipcode);
                </text>
            }
            @foreach (var f in Model.Frequencies)
            {
                <text>
                var frequency = @f;
                frequencies.push(frequency);
                </text>
            }
        }



        chartIt();


    </script>

    <h1>your updates</h1>
    <p>
        <a asp-action="Create">Create New</a>
    </p>

    <h2 id="header" class="active">active</h2>



    @foreach (var item in Model.Updates)
    {
        <table class="table">
            @*<thead>
                </thead>*@
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ShopOwner.Id)
                        </td>*@

                    <td class="date-and-zip">
                        posted @Html.DisplayFor(modelItem => item.StartDate) <br />till @Html.DisplayFor(modelItem => item.EndDate) <br />in @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                    <td class="text-content">
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @if (item.Barcode != null)
                    {
                        <td class="barcode">
                            <img src="@item.Barcode" />
                        </td>
                    }
                    <td class="edit-details-delete">
                        <a asp-action="Edit" asp-route-id="@item.Id">edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">delete</a>
                    </td>

                </tr>
            </tbody>
        </table>
    }
    <h2 id="header" class="scheduled">scheduled</h2>

    @foreach (var item in Model.ScheduledUpdates)
    {
        <table class="table">
            @*<thead>
                </thead>*@
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ShopOwner.Id)
                        </td>*@

                    <td class="date-and-zip">
                        posted @Html.DisplayFor(modelItem => item.StartDate) <br />till @Html.DisplayFor(modelItem => item.EndDate) <br />in @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                    <td class="text-content">
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @if (item.Barcode != null)
                    {
                        <td class="barcode">
                            <img src="@item.Barcode" />
                        </td>
                    }
                    <td class="edit-details-delete">
                        <a asp-action="Edit" asp-route-id="@item.Id">edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">delete</a>
                    </td>

                </tr>
            </tbody>
        </table>
    }






    <h2 id="header" class="archive">archive</h2>

    @foreach (var item in Model.AllUpdates)
    {
        <table class="table">
            @*<thead>
                </thead>*@
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ShopOwner.Id)
                        </td>*@

                    <td class="date-and-zip">
                        posted @Html.DisplayFor(modelItem => item.StartDate) <br />till @Html.DisplayFor(modelItem => item.EndDate) <br />in @Html.DisplayFor(modelItem => item.ZipCode)
                    </td>
                    <td class="text-content">
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @if (item.Barcode != null)
                    {
                        <td class="barcode">
                            <img src="@item.Barcode" />
                        </td>
                    }

                    <td class="edit-details-delete">
                        <a asp-action="Edit" asp-route-id="@item.Id">edit</a> |
                        <a asp-action="Details" asp-route-id="@item.Id">details</a> |
                        <a asp-action="Delete" asp-route-id="@item.Id">delete</a>
                    </td>

                </tr>
            </tbody>
        </table>
    }
    @if (Model.AllUpdates.Count == 0)
    {
        Write("no updates in archive");
    }


    <h1>posts</h1>
    <h2>local</h2>

    @foreach (var item in Model.Messages)
    {
        <table class="table">
            @*<thead>
                </thead>*@
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ShopOwner.Id)
                        </td>*@

                    <td class="date-and-zip">
                        @Html.DisplayFor(modelItem => item.Username) @if (item.NeighborZipCode != Model.ShopOwner.ZipCode) { Write("(nonlocal)"); } else { Write("(local)"); } <br /> posted in @Html.DisplayFor(modelItem => item.ZipCode) <br /> on @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    <td class="text-content">
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @*<td class="edit-details-delete">
                            <a asp-action="Edit" asp-route-id="@item.Id">edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">delete</a>
                        </td>*@

                </tr>
            </tbody>
        </table>
    }
    @if (Model.Messages.Count == 0)
    {
        Write("no local posts");
    }


    <h2>nonlocal</h2>

    @foreach (var item in Model.MessagesOutsideZipCode)
    {
        <table class="table">
            @*<thead>
                </thead>*@
            <tbody>
                <tr>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.ShopOwner.Id)
                        </td>*@

                    <td class="date-and-zip">
                        @Html.DisplayFor(modelItem => item.Username) @if (item.NeighborZipCode != Model.ShopOwner.ZipCode) { Write("(nonlocal)"); } else { Write("(local)"); } <br /> posted in @Html.DisplayFor(modelItem => item.ZipCode) <br /> on @Html.DisplayFor(modelItem => item.DateTime)
                    </td>
                    <td class="text-content">
                        @Html.DisplayFor(modelItem => item.Text)
                    </td>
                    @*<td class="edit-details-delete">
                            <a asp-action="Edit" asp-route-id="@item.Id">edit</a> |
                            <a asp-action="Details" asp-route-id="@item.Id">details</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">delete</a>
                        </td>*@

                </tr>
            </tbody>
        </table>
    }
    @if (Model.MessagesOutsideZipCode.Count == 0)
    {
        Write("no nonlocal posts");
    }



</body>
</html>